<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Mohcine Madkour - Mohcine Madkour</title><link>https://mohcinemadkour.github.io/</link><description></description><lastBuildDate>Sun, 07 Oct 2018 16:00:00 -0400</lastBuildDate><item><title>End to End ETL process using CSV files and MySQL database</title><link>https://mohcinemadkour.github.io/posts/2018/10/Using%20only%20Python:%20ETL%20a%20set%20of%20CSV%20files%20to%20a%20native%20MySQL%20database%20from%20end%20to%20end2/</link><description>&lt;p&gt;This post explains an end to end process to move data from simple CSV files to a database server, in my case MySQL but you can do some tiny changes to have it work in any SQL language. I put the schema of the [database I generated from this code …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mohcine Madkour</dc:creator><pubDate>Sun, 07 Oct 2018 16:00:00 -0400</pubDate><guid isPermaLink="false">tag:mohcinemadkour.github.io,2018-10-07:/posts/2018/10/Using only Python: ETL a set of CSV files to a native MySQL database from end to end2/</guid><category>MySQL</category><category>Database</category><category>Load data</category><category>CSV</category></item><item><title>Sentiment analysis on streaming Twitter data</title><link>https://mohcinemadkour.github.io/posts/2018/08/Analysing%20Model%20Perfromance%20from%20ROC,%20and%20Recall%20and%20Precision%20curves/</link><description>&lt;p&gt;This tutorial will teach you how to build sentiment analysis algorithms with Apache Spark. We will be doing data transformation using Python and Apache Spark 2, and we will be classifying tweets as happy or sad using a Gradient Boosting algorithm. The solution is going to use many different components …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mohcine Madkour</dc:creator><pubDate>Mon, 06 Aug 2018 16:00:00 -0400</pubDate><guid isPermaLink="false">tag:mohcinemadkour.github.io,2018-08-06:/posts/2018/08/Analysing Model Perfromance from ROC, and Recall and Precision curves/</guid><category>sentiment analysis</category><category>data streaming</category><category>Twitter data</category><category>Kafka</category><category>Spark</category></item><item><title>Deep Reinforcement Learning</title><link>https://mohcinemadkour.github.io/posts/2018/06/Deep%20Reinforcement%20Learning/</link><description>&lt;p&gt;Today, we will explore Reinforcement Learning – a goal-oriented learning based on interaction with environment. Reinforcement Learning is said to be the hope of true artificial intelligence. And it is rightly said so, because the potential that Reinforcement Learning possesses is immense.
Reinforcement learning refers to goal-oriented algorithms, which learn how …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mohcine Madkour</dc:creator><pubDate>Thu, 14 Jun 2018 13:01:00 -0400</pubDate><guid isPermaLink="false">tag:mohcinemadkour.github.io,2018-06-14:/posts/2018/06/Deep Reinforcement Learning/</guid><category>Deep Reinforcement Learning</category></item><item><title>Analysing Model Perfromance from Receiver Operator Characteristic and Recall and Precision curves</title><link>https://mohcinemadkour.github.io/posts/2018/06/Analysing%20Model%20Perfromance%20from%20ROC,%20and%20Recall%20and%20Precision%20curves/</link><description>&lt;p&gt;ROC and PR curves are commonly used to present results for binary decision problems in machine learning. The ROC curve is created by plotting the true positive rate (TPR) against the false positive rate (FPR) at various threshold settings. Each point of the ROC curve (i.e. threshold) corresponds to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mohcine Madkour</dc:creator><pubDate>Sat, 09 Jun 2018 16:00:00 -0400</pubDate><guid isPermaLink="false">tag:mohcinemadkour.github.io,2018-06-09:/posts/2018/06/Analysing Model Perfromance from ROC, and Recall and Precision curves/</guid><category>ROC</category><category>AUROC</category><category>AUCPR</category><category>F1 Score</category><category>Recall</category><category>Precision</category></item><item><title>Building Machine Learning models with Unbalanced data</title><link>https://mohcinemadkour.github.io/posts/2017/10/Learning%20from%20unbalanced%20data/</link><description>&lt;p&gt;In this blog post, I'll discuss a number of considerations and techniques for dealing with imbalanced data when training a machine learning model. The blog post will rely heavily on a sklearn contributor package called &lt;a href="https://imbalanced-learn.org/en/stable/index.html"&gt;imbalanced-learn&lt;/a&gt; to implement the discussed techniques.
Training a machine learning model on an imbalanced dataset …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mohcine Madkour</dc:creator><pubDate>Mon, 09 Oct 2017 12:00:00 -0400</pubDate><guid isPermaLink="false">tag:mohcinemadkour.github.io,2017-10-09:/posts/2017/10/Learning from unbalanced data/</guid><category>unbalanced data</category><category>ROC</category><category>AUROC</category><category>AUCPR</category><category>F1 Score</category><category>Recall</category><category>Precision</category></item><item><title>The role of unit tests in test automation</title><link>https://mohcinemadkour.github.io/posts/2017/08/The%20role%20of%20unit%20tests%20in%20test%20automation/</link><description>&lt;p&gt;Unit testing is a software development and testing approach in which the smallest testable parts of an application, called units, are individually and independently tested to see if they are operating properly. Unit testing can be done manually but is usually automated. Unit testing is a part of the test-driven …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mohcine Madkour</dc:creator><pubDate>Thu, 03 Aug 2017 16:00:00 -0400</pubDate><guid isPermaLink="false">tag:mohcinemadkour.github.io,2017-08-03:/posts/2017/08/The role of unit tests in test automation/</guid><category>Unit Test</category><category>Software</category></item><item><title>Clustering of vaccine temporal data in timeline</title><link>https://mohcinemadkour.github.io/posts/2015/02/Temporal%20clinical%20events%20clustering/</link><description>&lt;p&gt;Events in clinical narratives are naturally associated with medical trials, including surgery, vaccination, lab test, medication, medical procedure, and diagnosis. They are interrelated with many temporal relations. The grouping of medical events onto temporal clusters is a key to applications such as longitudinal studies, clinical question answering, and information retrieval …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mohcine Madkour</dc:creator><pubDate>Wed, 18 Feb 2015 16:00:00 -0500</pubDate><guid isPermaLink="false">tag:mohcinemadkour.github.io,2015-02-18:/posts/2015/02/Temporal clinical events clustering/</guid><category>K-means</category><category>data visualization</category><category>VAERS Reports</category></item></channel></rss>